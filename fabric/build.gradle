plugins {
    id 'java'
    id 'maven-publish'
    id 'fabric-loom'
    id 'com.github.johnrengelman.shadow'
    id 'com.modrinth.minotaur'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = maven_group
archivesBaseName = archives_base_name
version = "${library_version}+${minecraft_version}"

repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
}

runClient.doFirst {
    args = ['--username', "henkelmax${new Random().nextInt(1000)}"]
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modCompileOnly "net.fabricmc:fabric-loader:${loader_version}"

    shadow project(':core')
    shadow project(path: ':minecraft', configuration: 'namedElements')

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'version': version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = 'shadow-dev'
    dependencies {
        exclude(dependency('com.google.code.findbugs:jsr305'))
        exclude(dependency('com.mojang:brigadier'))
    }
}

remapJar {
    dependsOn shadowJar
    inputFile = shadowJar.archiveFile.get()
}

publishing {
    publications {
        admiralFabric(MavenPublication) {
            artifactId archives_base_name
            artifact(remapJar) {
                builtBy build
                classifier null
            }
        }
    }
    repositories {
        maven {
            name = 'henkelmax.public'
            url = 'https://maven.maxhenkel.de/repository/public'
            credentials {
                username System.getenv('MAVEN_USERNAME')
                password System.getenv('MAVEN_PASSWORD')
            }
        }
    }
}

modrinth {
    token = file("${rootDir}/modrinth_token.txt").exists() ? file("${rootDir}/modrinth_token.txt").text : ''
    projectId = modrinth_id
    versionNumber = "${version}+fabric"
    versionName = "Admiral Fabric ${version}"
    uploadFile = remapJar
    versionType = release_type.toUpperCase()
    changelog = rootProject.file('changelog.md').text
    gameVersions = [minecraft_version]
    loaders = ['fabric']
}
tasks.modrinth.dependsOn(build)