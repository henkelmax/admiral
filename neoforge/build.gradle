plugins {
    id 'java'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version "${neogradle_version}"
    id 'com.gradleup.shadow'
    id 'com.modrinth.minotaur'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

group = maven_group
archivesBaseName = archives_base_name
version = "${library_version}+${minecraft_version}"

repositories {
    mavenCentral()
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    shadow project(':core')
    shadow project(path: ':minecraft', configuration: 'namedElements')

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    filesMatching('**/*.toml') {
        expand 'version': version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = ''
    dependencies {
        exclude(dependency('com.google.code.findbugs:jsr305'))
        exclude(dependency('com.mojang:brigadier'))
    }
}
jar.finalizedBy('shadowJar')

publishing {
    publications {
        admiralFabric(MavenPublication) {
            artifactId archives_base_name
            artifact(jar) {
                builtBy build
                classifier null
            }
        }
    }
    repositories {
        maven {
            name = 'henkelmax.public'
            url = 'https://maven.maxhenkel.de/repository/public'
            credentials {
                username System.getenv('MAVEN_USERNAME')
                password System.getenv('MAVEN_PASSWORD')
            }
        }
    }
}

modrinth {
    token = file("${rootDir}/modrinth_token.txt").exists() ? file("${rootDir}/modrinth_token.txt").text : ''
    projectId = modrinth_id
    versionNumber = "${version}+neoforge"
    versionName = "Admiral NeoForge ${version}"
    uploadFile = jar
    versionType = release_type.toUpperCase()
    changelog = rootProject.file('changelog.md').text
    gameVersions = supported_minecraft_versions.split(',').collect { it.trim() }
    loaders = ['neoforge']
}
tasks.modrinth.dependsOn(shadowJar)
