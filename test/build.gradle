plugins {
    id 'java'
    id 'fabric-loom'
    id 'com.github.johnrengelman.shadow'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
}

runClient.doFirst {
    args = ['--username', "henkelmax${new Random().nextInt(1000)}"]
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    implementation project(':core')
    shadow project(':core')
    implementation project(path: ':minecraft', configuration: 'namedElements')
    shadow project(path: ':minecraft', configuration: 'namedElements')

    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'version': version,
                'loader_version': loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = 'shadow-dev'
    dependencies {
        exclude(dependency('com.google.code.findbugs:jsr305'))
        exclude(dependency('com.mojang:brigadier'))
    }
}

remapJar {
    dependsOn shadowJar
    inputFile = shadowJar.archiveFile.get()
}
